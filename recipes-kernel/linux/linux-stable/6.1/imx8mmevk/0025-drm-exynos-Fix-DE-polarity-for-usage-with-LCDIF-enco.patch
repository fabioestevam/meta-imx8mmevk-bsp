From 34a32681921602d811881e419f88187592d9ed2e Mon Sep 17 00:00:00 2001
From: Frieder Schrempf <frieder.schrempf@kontron.de>
Date: Thu, 10 Dec 2020 15:34:59 +0100
Subject: [PATCH 25/28] drm/exynos: Fix DE polarity for usage with LCDIF
 encoder

The bridge seems to expect not only active low sync signals, but
also DE should be active low. Strangely the i.MX8MM reference
manual says "Vsync, Hsync, and VDEN are active high signals", but
it wouldn't be the first time it is wrong.

Upstream-Status: Inappropriate [Downstream https://github.com/fschrempf/linux 95b56c13dba7 ("drm/exynos: Fix DE polarity for usage with LCDIF encoder")]
Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
---
 drivers/gpu/drm/bridge/adv7511/adv7511_drv.c | 1 +
 drivers/gpu/drm/bridge/samsung-dsim.c        | 5 +++++
 2 files changed, 6 insertions(+)

diff --git a/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c b/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c
index b78243c00039..eab751f05fa9 100644
--- a/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c
+++ b/drivers/gpu/drm/bridge/adv7511/adv7511_drv.c
@@ -9,6 +9,7 @@
 #include <linux/device.h>
 #include <linux/gpio/consumer.h>
 #include <linux/module.h>
+#include <linux/media-bus-format.h>
 #include <linux/of_device.h>
 #include <linux/slab.h>
 
diff --git a/drivers/gpu/drm/bridge/samsung-dsim.c b/drivers/gpu/drm/bridge/samsung-dsim.c
index ba129b620e77..441210a770fb 100644
--- a/drivers/gpu/drm/bridge/samsung-dsim.c
+++ b/drivers/gpu/drm/bridge/samsung-dsim.c
@@ -1588,6 +1588,10 @@ static ssize_t samsung_dsim_host_transfer(struct mipi_dsi_host *host,
 	return (ret < 0) ? ret : xfer.rx_done;
 }
 
+static const struct drm_bridge_timings samsung_dsim_timings = {
+	.input_bus_flags = DRM_BUS_FLAG_DE_LOW,
+};
+
 static const struct mipi_dsi_host_ops samsung_dsim_ops = {
 	.attach = samsung_dsim_host_attach,
 	.detach = samsung_dsim_host_detach,
@@ -1723,6 +1727,7 @@ static int samsung_dsim_probe(struct platform_device *pdev)
 	dsi->bridge.of_node = dev->of_node;
 	dsi->bridge.timings = &samsung_dsim_bridge_timings;
 	dsi->bridge.type = DRM_MODE_CONNECTOR_DSI;
+	dsi->bridge.timings = &samsung_dsim_timings;
 
 	if (dsi->driver_data->quirks & DSIM_QUIRK_PLAT_DATA)
 		ret = samsung_dsim_plat_probe(dsi);
-- 
2.25.1

